/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.7
 * Generated at: 2023-09-10 06:54:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.layout;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class base_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("file:/C:/Users/Jasir/.m2/repository/lk/callidora/jsp/jsp-template-inheritance/1.0.1/jsp-template-inheritance-1.0.1.jar", Long.valueOf(1692244300354L));
    _jspx_dependants.put("jar:file:/C:/Users/Jasir/.m2/repository/lk/callidora/jsp/jsp-template-inheritance/1.0.1/jsp-template-inheritance-1.0.1.jar!/META-INF/jsp-inheritance.tld", Long.valueOf(1692219220000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("    ");
      if (_jspx_meth_layout_005fblock_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"shortcut icon\" href=\"assets/img/favicon.png\">\r\n");
      out.write("\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&amp;display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v6.1.1/css/all.css\" />\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/vendor/font-awesome/css/fontawesome-all.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/vendor/flaticon/font/flaticon.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/vendor/animate.css/animate.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/vendor/slick-carousel/slick/slick.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/vendor/malihu-custom-scrollbar-plugin/jquery.mCustomScrollbar.css\">\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/css/theme.css\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/frontend/include/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_layout_005fblock_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/frontend/include/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"assets/vendor/jquery/dist/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"assets/vendor/jquery-migrate/dist/jquery-migrate.min.js\"></script>\r\n");
      out.write("<script src=\"assets/vendor/popper.js/dist/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"assets/vendor/bootstrap/bootstrap.min.js\"></script>\r\n");
      out.write("<script src=\"assets/vendor/bootstrap-select/dist/js/bootstrap-select.min.js\"></script>\r\n");
      out.write("<script src=\"assets/vendor/multilevel-sliding-mobile-menu/dist/jquery.zeynep.js\"></script>\r\n");
      out.write("<script src=\"assets/vendor/malihu-custom-scrollbar-plugin/jquery.mCustomScrollbar.concat.min.js\"></script>\r\n");
      out.write("<script src=\"assets/vendor/slick-carousel/slick/slick.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script src=\"assets/js/hs.core.js\"></script>\r\n");
      out.write("<script src=\"assets/js/components/hs.unfold.js\"></script>\r\n");
      out.write("<script src=\"assets/js/components/hs.malihu-scrollbar.js\"></script>\r\n");
      out.write("<script src=\"assets/js/components/hs.slick-carousel.js\"></script>\r\n");
      out.write("<script src=\"assets/js/components/hs.show-animation.js\"></script>\r\n");
      out.write("<script src=\"assets/js/components/hs.selectpicker.js\"></script>\r\n");
      out.write("<script src=\"assets/js/components/hs.show-animation.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    $(document).on('ready', function() {\r\n");
      out.write("        // initialization of unfold component\r\n");
      out.write("        $.HSCore.components.HSUnfold.init($('[data-unfold-target]'));\r\n");
      out.write("\r\n");
      out.write("        // initialization of malihu scrollbar\r\n");
      out.write("        $.HSCore.components.HSMalihuScrollBar.init($('.js-scrollbar'));\r\n");
      out.write("\r\n");
      out.write("        // initialization of slick carousel\r\n");
      out.write("        $.HSCore.components.HSSlickCarousel.init('.js-slick-carousel');\r\n");
      out.write("\r\n");
      out.write("        // initialization of show animations\r\n");
      out.write("        $.HSCore.components.HSShowAnimation.init('.js-animation-link');\r\n");
      out.write("\r\n");
      out.write("        // init zeynepjs\r\n");
      out.write("        var zeynep = $('.zeynep').zeynep({\r\n");
      out.write("            onClosed: function() {\r\n");
      out.write("                // enable main wrapper element clicks on any its children element\r\n");
      out.write("                $(\"body main\").attr(\"style\", \"\");\r\n");
      out.write("\r\n");
      out.write("                console.log('the side menu is closed.');\r\n");
      out.write("            },\r\n");
      out.write("            onOpened: function() {\r\n");
      out.write("                // disable main wrapper element clicks on any its children element\r\n");
      out.write("                $(\"body main\").attr(\"style\", \"pointer-events: none;\");\r\n");
      out.write("\r\n");
      out.write("                console.log('the side menu is opened.');\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // handle zeynep overlay click\r\n");
      out.write("        $(\".zeynep-overlay\").click(function() {\r\n");
      out.write("            zeynep.close();\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // open side menu if the button is clicked\r\n");
      out.write("        $(\".cat-menu\").click(function() {\r\n");
      out.write("            if ($(\"html\").hasClass(\"zeynep-opened\")) {\r\n");
      out.write("                zeynep.close();\r\n");
      out.write("            } else {\r\n");
      out.write("                zeynep.open();\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_layout_005fblock_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  layout:block
    lk.callidora.jsp.inheritance.BlockTag _jspx_th_layout_005fblock_005f0 = new lk.callidora.jsp.inheritance.BlockTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_layout_005fblock_005f0);
    try {
      _jspx_th_layout_005fblock_005f0.setJspContext(_jspx_page_context);
      // /WEB-INF/views/layout/base.jsp(9,4) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_layout_005fblock_005f0.setName("title");
      _jspx_th_layout_005fblock_005f0.setJspBody(new Helper( 0, _jspx_page_context, _jspx_th_layout_005fblock_005f0, null));
      _jspx_th_layout_005fblock_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_layout_005fblock_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_layout_005fblock_005f1(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  layout:block
    lk.callidora.jsp.inheritance.BlockTag _jspx_th_layout_005fblock_005f1 = new lk.callidora.jsp.inheritance.BlockTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_layout_005fblock_005f1);
    try {
      _jspx_th_layout_005fblock_005f1.setJspContext(_jspx_page_context);
      // /WEB-INF/views/layout/base.jsp(35,0) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_layout_005fblock_005f1.setName("contents");
      _jspx_th_layout_005fblock_005f1.setJspBody(new Helper( 1, _jspx_page_context, _jspx_th_layout_005fblock_005f1, null));
      _jspx_th_layout_005fblock_005f1.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_layout_005fblock_005f1);
    }
    return false;
  }

  private class Helper
      extends org.apache.jasper.runtime.JspFragmentHelper
  {
    private jakarta.servlet.jsp.tagext.JspTag _jspx_parent;
    private int[] _jspx_push_body_count;

    public Helper( int discriminator, jakarta.servlet.jsp.JspContext jspContext, jakarta.servlet.jsp.tagext.JspTag _jspx_parent, int[] _jspx_push_body_count ) {
      super( discriminator, jspContext, _jspx_parent );
      this._jspx_parent = _jspx_parent;
      this._jspx_push_body_count = _jspx_push_body_count;
    }
    public boolean invoke0( jakarta.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");
      return false;
    }
    public boolean invoke1( jakarta.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      out.write("\r\n");
      out.write("\r\n");
      return false;
    }
    public void invoke( java.io.Writer writer )
      throws jakarta.servlet.jsp.JspException
    {
      jakarta.servlet.jsp.JspWriter out = null;
      if( writer != null ) {
        out = this.jspContext.pushBody(writer);
      } else {
        out = this.jspContext.getOut();
      }
      try {
        Object _jspx_saved_JspContext = this.jspContext.getELContext().getContext(jakarta.servlet.jsp.JspContext.class);
        this.jspContext.getELContext().putContext(jakarta.servlet.jsp.JspContext.class,this.jspContext);
        switch( this.discriminator ) {
          case 0:
            invoke0( out );
            break;
          case 1:
            invoke1( out );
            break;
        }
        jspContext.getELContext().putContext(jakarta.servlet.jsp.JspContext.class,_jspx_saved_JspContext);
      }
      catch( java.lang.Throwable e ) {
        if (e instanceof jakarta.servlet.jsp.SkipPageException)
            throw (jakarta.servlet.jsp.SkipPageException) e;
        throw new jakarta.servlet.jsp.JspException( e );
      }
      finally {
        if( writer != null ) {
          this.jspContext.popBody();
        }
      }
    }
  }
}
